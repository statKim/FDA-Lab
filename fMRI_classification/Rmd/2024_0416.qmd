---
title: "Classificaion for fMRI curves with similar mean, different variation"
# author: "Hyunsung Kim"
date: '2024-04-16'
format: 
  pdf:
    documentclass: scrartcl
    include-in-header:
      - text: |
          \usepackage{kotex}
      - ./preamble.tex
knitr:
  opts_chunk:
    out.width: "80%"
---


```{r setup, include=FALSE}
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
  echo = FALSE, message = FALSE, warning = FALSE, 
  # cache = T,
  # fig.width = 12, fig.height = 6,
  # out.width = "80%",
  fig.align = "center"
)
# # Set working directory
# knitr::opts_knit$set(root.dir = "../")
```


# 1. 데이터 형태

- 191 subjects obsereved from 232 timepoints
- 각 subject마다 82개 brain region에서 관측된 데이터
  - 즉, 1개 subject가 82 x 232 형태의 데이터를 가짐 (82 curves)
  
## 문제점
- region을 모두 이어서 1개의 curve로 만들면 19,024개 timepoints가 됨
  - 차원 너무 커서, cov 계산 불가
- 82 functional covariate을 고려하는 multivariate functional classification 방법??


# 2. 기존 분석 과정
1. 각 subject마다 region별 curve들의 length를 계산하여 $n\times 82$인 multivariate data로 변환
2. sparse PCA를 적용하여 20개로 차원축소
3. $n \times 20$ 데이터로 multivariate data classification 방법 적용



<!-- ```{r} -->
<!-- knitr::include_graphics("/Users/hyunsung/Desktop/Rproject/FDA-Lab/manifold_clust/Rmd/figure/2022_0318/bird_clust.pdf") -->
<!-- ``` -->

# 3. 결과

## 1. 1st region에서의 curve만 이용

```{r}
#| fig-cap: "fMRI curves from 1st region."
library(tidyverse)
library(fda)
library(CVXR)

# Class label of 191 subjects
y <- read.csv("./fMRI_Classification/class_label.csv", header = T)
y <- y$y

# 191 curves from 1st region
idx <- 1
file_list <- list.files("./fMRI_Classification/AlignedSubject/")
for (i in 1:length(file_list)) {
  df <- read.csv(paste0("./fMRI_Classification/AlignedSubject/", file_list[i]), header = T)
  df <- df[idx, -1] %>% unlist() %>% as.numeric()
  
  if (i == 1) {
    X <- df
  } else {
    X <- rbind(X, df)
  }
}
# dim(X)  # 191 232
# class(X)

# matplot(t(X), type = "l", col = y+1)

par(mfrow = c(1, 2), mar = c(5, 1, 4, 1.2))
matplot(t(X[y == 0, ]), type = "l", ylim = c(-30, 30), col = "gray", main = "Control")
lines(colMeans(X[y == 0, ]), lwd = 3)
matplot(t(X[y == 1, ]), type = "l", ylim = c(-30, 30), col = "gray", main = "ADHD")
lines(colMeans(X[y == 1, ]), lwd = 3)
```

- 80% training, 20% test 데이터로 고려하였고, 100번 반복하여 결과 요약

- 다음의 비교 방법론 고려
  - `VPC`: Jiao, S., Frostig, R. D., & Ombao, H. (2023). Variation pattern classification of functional data. Canadian Journal of Statistics, 51(4), 943-958.
    - feature function 개수는 PVE $\ge 0.90$ rule 적용
  - `Fused`: Baek, S., Kim, Y., Park, J., & Lee, J. S. (2022). Revisit to functional data analysis of sleeping energy expenditure. Journal of Applied Statistics, 49(4), 988-1002.
    - 현재 knots 개수 = 50, penalty parameters $\lambda_1=0.1, \lambda_2=0.1$로 fixed된 결과 
  - `FGLM`: Functional generalized linear model (logistic)
    - 내부적으로 B-spline basis expansion을 적용

\begin{table}[ht]
\centering
\begin{tabular}{rrrr}
  \hline
 & VPC & Fused & FGLM \\ 
  \hline
  ACC (se) & 0.443 (0.087) & 0.464 (0.079) & 0.572 (0.068)  \\ 
  \hline
\end{tabular}
\end{table}

- 전체적으로 결과가 매우 안좋음
- `VPC`의 경우도, 시뮬레이션에서 매우 fluctuate하고 variance만 달라지는 경우를 고려하지는 않은 것처럼 보임
```{r}
#| fig-cap: "Simulated data from the `VPC` paper."

library(fda)
set.seed(100)
### setting ###
z <- 1:100/100; Rep <- 200
N1 <- 200; N2 <- 200; N.train <- 100
basis <- create.bspline.basis(c(0,1),nbasis=24)
a <- sqrt(80); b <- sqrt((100-a^2)/7)
#### simulate functions ####
sigma1 <- rep(c(b,b,a,rep(b,5)),3)
sigma2 <- rep(c(rep(b,5),a,b,b),3)

score1 <- matrix(rnorm(N1*24,0,sigma1),24,N1)
score1 <- score1-rowMeans(score1)
score2 <- matrix(rnorm(N2*24,0,sigma2),24,N2)
score2 <- score2-rowMeans(score2)
F1 <- fd(score1,basis)
F2 <- fd(score2,basis)
F1.dis <- eval.fd(z,F1)
F2.dis <- eval.fd(z,F2)

matplot(F1.dis, type = "l", col = "gray")
matlines(F2.dis, type = "l", col = "black")
```



## 2. 82 region에서의 curve 모두 이용
- 80% training, 20% test 데이터로 고려하였고, 100번 반복하여 결과 요약

- Multivariate functional classification 적용
  - `FGLM`: Functional GLM (logistic)
    - trainig data 수에 비해 parameter 수가 매우 많아져서 rank-defficient warning 발생
  - `FGAM`: Functional generalized additive model

\begin{table}[ht]
\centering
\begin{tabular}{rrr}
  \hline
 & FGLM & FGAM \\ 
  \hline
  ACC (se) & 0.494 (0.082) & 0.514 (0.084)  \\ 
  \hline
\end{tabular}
\end{table}

